/* inheritance can be used to create a class hierarchy. 
The base class can be "Student," and subclasses can be created
 for each type of course, 
such as "ICTStudent," "LawStudent," and "BusinessStudent." 
Each subclass can have unique features specific to its course,
 while the base class can contain shared attributes. 
Inheritance allows for easy management of student information and the 
creation of methods to process details of different student types*/


#include <iostream>
#include <string>
using namespace std;

/*super class*/
class Student {
protected:
    string name;
    int contact;
    string regnumber;
public:
    Student(string n, int c, string r) {
        name = n;
        contact = c;
        regnumber = r;
    }
    void display() {
        cout << "Name: " << name << endl;
        cout << "contact: " << contact << endl;
        cout << "regnumber: " << regnumber << endl;
    }
};

/*Subclasses*/
class ICTStudent : public Student {
private:
    string courseType;
    int stage;
public:
    ICTStudent(string n, int c, string r, string t, int s) : Student(n, c, r) {
        courseType = t;
        stage = s;
    }
    void display() {
        cout << "ICT Student" << endl;
        Student::display();
        cout << "Course type: " << courseType << endl;
        cout << "Stage: " << stage << endl;
    }
};

class LawStudent : public Student {
private:
    string courseType;
public:
    LawStudent(string n, int c, string r, string t) : Student(n, c, r) {
        courseType = t;
    }
    void display() {
        cout << "Law Student" << endl;
        Student::display();
        cout << "Course type: " << courseType << endl;
    }
};

class BusinessStudent : public Student {
private:
    string courseType;
public:
    BusinessStudent(string n, int c, string r, string t) : Student(n, c, r) {
        courseType = t;
    }
    void display() {
        cout << "Business Student" << endl;
        Student::display();
        cout << "Course type: " << courseType << endl;
    }
};

int main() 
{
    /*student objects*/
    ICTStudent s1("baba voss",07224556,"ENE211-0008/2020","Msc. degree",1);
    LawStudent s2("Raymond reddington", 072345556,"ENE211-0348/2020", "bachelor's degree");
    BusinessStudent s3("Edo voss", 07467651, "ENE212-0030/2019", "Diploma");

    /*Display their details*/
    s1.display();
    cout << endl;
    s2.display();
    cout << endl;
    s3.display();

    return 0;
}
